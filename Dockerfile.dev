FROM python:3.10.12-slim-buster

# security-sensitive environments, bytecode files might contain sensitive information from the source code
# To reduce the risk of accidental exposure of the sensitive information make use of PYTHONDONTWRITEBYTECODE
ENV PYTHONDONTWRITEBYTECODE 1
# Ensuring any output generated by Python scripts is immediately visible and log data is immediately written to the
# file without any buffering delays can be achieved by setting PYTHONBUFFERED
ENV PYTHONUNBUFFERED 1

# Install dependencies for psycopg and PostgreSQL/PostGIS
RUN apt-get update -y && apt-get upgrade -y
RUN apt-get install -y libgdal-dev build-essential libpq-dev

# Running containers as the root user inside the container can potentially allow malicious code within the container
# to escalate its privileges and access the host system. Minimal privileges reduces the attack surface
RUN mkdir -p /home/locator

# Linux supports creation of users and groups (a normal user can take uid from 1000 to 60000, and one
# root user (uid 0) and 999 system users (uid 1 to 999)). Refer to the Linux documentation for details
RUN groupadd --gid 1001 locator && \
    useradd --uid 1001 --gid locator --home /home/locator locator

# Pipenv is a tool in the Python ecosystem that aims to provide a more streamlined and user-friendly way of managing
# project dependencies and virtual environments. It combines both the functionality of pip, the package installer for
# Python, and virtualenv, a tool for creating isolated Python environments
RUN pip install pipenv

# Create working directory and assign varibale name
ENV HOME=/home/locator
ENV APP_HOME=/home/locator/mpesa_locator_backend
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# Copy dependencies files
COPY ./Pipfile ./Pipfile.lock $APP_HOME
# Install development packages
RUN pipenv install --deploy --dev --system

# Copy project files and sub-directories
COPY . $APP_HOME

# Changing ownership of working directory
RUN chown -R locator:locator $APP_HOME

# change to the app user
USER locator


